{"ast":null,"code":"var _jsxFileName = \"D:\\\\vs_code\\\\React_applications_learning\\\\i-notes\\\\src\\\\contexts\\\\CategoryState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport categoryContext from './CategoryContext';\nimport axios, { HttpStatusCode } from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CategoryState = props => {\n  _s();\n  const initialCategory = [];\n  const [category, setCategory] = useState(initialCategory);\n  const getCategories = () => {\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem('tokenForValidation')\n      }\n    };\n    let url = 'http://localhost:9092/user/getCategories';\n    axios.get(url, config).then(response => {\n      if (response.status === HttpStatusCode.Ok) {\n        setCategory(response.data);\n      }\n    }).catch(error => {\n      if (error.response) {\n        Swal.fire({\n          title: \"Error !\",\n          icon: 'error',\n          text: `${error.response.data}`\n        });\n      } else {\n        Swal.fire(\"Something went wrong\", \"Please try again later\", 'error');\n      }\n    });\n  };\n  const deleteCategory = (id, setIsLoading) => {\n    const config = {\n      headers: {\n        'Authorization': localStorage.getItem('tokenForValidation')\n      }\n    };\n    let url = `http://localhost:9092/user/deleteCategory?id=${id}`;\n    axios.delete(url, config).then(res => {\n      if (res.status === HttpStatusCode.Ok) {\n        Swal.fire({\n          title: \"Success!\",\n          text: `Category deleted with id ${id}`,\n          icon: 'success'\n        });\n      }\n    }).catch(err => {\n      if (err.response) {\n        Swal.fire(`Failed`, `${err.response.data}`, `error`);\n      } else {\n        Swal.fire({\n          title: \"Error occured Try again!!!\",\n          icon: 'error'\n        });\n      }\n    }).finally(() => {\n      //here we are stoping the loading but we need to remove the card also.\n      //its not the correct way that after deleting we should refresh the notes : user/notes not \n      //to show the content instead of loading..\n      // will not set here..=>setIsLoading(()=>{return false})\n      //if we are not setting to false then the state is true ..so when rerendering next card shows\n      //loading so set state to false....\n      setIsLoading(() => {\n        return false;\n      });\n      getCategories();\n    });\n  };\n  const updateCategory = id => {\n    console.log('update', id);\n    Swal.fire({\n      title: 'Enter the Category name to update',\n      input: 'text',\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Update',\n      showLoaderOnConfirm: true,\n      preConfirm: name => {\n        const config = {\n          headers: {\n            'Authorization': localStorage.getItem('tokenForValidation')\n          }\n        };\n        let url = `http://localhost:9092/user/updateCategory`;\n        let data = {\n          'name': name,\n          'id': id\n        };\n        return axios.put(url, data, config).then(res => {\n          if (res.status === HttpStatusCode.Ok) {\n            Swal.fire({\n              title: \"Success!\",\n              text: `Category name changed with ${name} for id ${id}`,\n              icon: 'success'\n            });\n          }\n        }).catch(err => {\n          if (err.response) {\n            Swal.showValidationMessage(`Failed : ${err.response.data}`);\n          } else {\n            Swal.showValidationMessage(\"Something went wrong!\");\n          }\n        });\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    });\n  };\n  return (\n    /*#__PURE__*/\n    // Swal.showValidationMessage(\n    //     `Request failed: ${error}`\n    //   )\n    _jsxDEV(categoryContext.Provider, {\n      value: {\n        category,\n        setCategory,\n        getCategories,\n        deleteCategory,\n        updateCategory\n      },\n      children: props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(CategoryState, \"ctW1RT1eIRjb6vjzZVq6bI6ct7Y=\");\n_c = CategoryState;\nexport default CategoryState;\nvar _c;\n$RefreshReg$(_c, \"CategoryState\");","map":{"version":3,"names":["React","useState","categoryContext","axios","HttpStatusCode","Swal","jsxDEV","_jsxDEV","CategoryState","props","_s","initialCategory","category","setCategory","getCategories","config","headers","localStorage","getItem","url","get","then","response","status","Ok","data","catch","error","fire","title","icon","text","deleteCategory","id","setIsLoading","delete","res","err","finally","updateCategory","console","log","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","name","put","showValidationMessage","allowOutsideClick","isLoading","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/vs_code/React_applications_learning/i-notes/src/contexts/CategoryState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport categoryContext from './CategoryContext'\r\nimport axios, { HttpStatusCode } from 'axios'\r\nimport Swal from 'sweetalert2'\r\nconst CategoryState = (props) => {\r\n    const initialCategory = []\r\n    const [category, setCategory] = useState(initialCategory)\r\n    const getCategories = () => {\r\n        let config = {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('tokenForValidation')\r\n            }\r\n        }\r\n        let url = 'http://localhost:9092/user/getCategories'\r\n        axios.get(url, config).then(response => {\r\n            if (response.status === HttpStatusCode.Ok) {\r\n                setCategory(response.data)\r\n            }\r\n        }).catch(error => {\r\n            if (error.response) {\r\n                Swal.fire({ title: \"Error !\", icon: 'error', text: `${error.response.data}` })\r\n            } else {\r\n                Swal.fire(\"Something went wrong\", \"Please try again later\", 'error');\r\n            }\r\n        })\r\n    }\r\n    const deleteCategory = (id,setIsLoading) => {\r\n        const config = {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('tokenForValidation')\r\n            }\r\n        };\r\n        let url = `http://localhost:9092/user/deleteCategory?id=${id}`\r\n        axios.delete(url, config).then(res => {\r\n            if(res.status===HttpStatusCode.Ok){\r\n                Swal.fire({title:\"Success!\",text:`Category deleted with id ${id}`,icon:'success'})\r\n            }\r\n        }).catch(err => {\r\n            if (err.response) {\r\n                Swal.fire(`Failed`, `${err.response.data}`, `error`)\r\n            } else {\r\n                Swal.fire({ title: \"Error occured Try again!!!\", icon: 'error' })\r\n            }\r\n        }).finally(()=>{\r\n            //here we are stoping the loading but we need to remove the card also.\r\n            //its not the correct way that after deleting we should refresh the notes : user/notes not \r\n            //to show the content instead of loading..\r\n            // will not set here..=>setIsLoading(()=>{return false})\r\n            //if we are not setting to false then the state is true ..so when rerendering next card shows\r\n            //loading so set state to false....\r\n            setIsLoading(()=>{return false})\r\n            getCategories()\r\n        })\r\n    }\r\n    const updateCategory = (id) => {\r\n        console.log('update', id)\r\n        Swal.fire({\r\n            title: 'Enter the Category name to update',\r\n            input: 'text',\r\n            inputAttributes: {\r\n              autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Update',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (name) => {\r\n                const config = {\r\n                    headers: {\r\n                        'Authorization': localStorage.getItem('tokenForValidation')\r\n                    }\r\n                };\r\n                let url = `http://localhost:9092/user/updateCategory`\r\n                let data={'name' : name,'id' :id}\r\n              return axios.put(url,data,config).then(res=>{\r\n                if(res.status===HttpStatusCode.Ok){\r\n                    Swal.fire({title:\"Success!\",text:`Category name changed with ${name} for id ${id}`,icon:'success'})\r\n                }\r\n              }).catch(err=>{\r\n                if(err.response){\r\n                    Swal.showValidationMessage(`Failed : ${err.response.data}`)\r\n                }else{\r\n                    Swal.showValidationMessage(\"Something went wrong!\")\r\n                }\r\n              })\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n          })\r\n    }\r\n    return (\r\n        // Swal.showValidationMessage(\r\n        //     `Request failed: ${error}`\r\n        //   )\r\n        <categoryContext.Provider value={{ category, setCategory, getCategories, deleteCategory, updateCategory }}>\r\n            {props.children}\r\n        </categoryContext.Provider>\r\n    )\r\n}\r\n\r\nexport default CategoryState\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,KAAK,IAAIC,cAAc,QAAQ,OAAO;AAC7C,OAAOC,IAAI,MAAM,aAAa;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC9B,MAAMC,aAAa,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAMC,eAAe,GAAG,EAAE;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACU,eAAe,CAAC;EACzD,MAAMG,aAAa,GAAGA,CAAA,KAAM;IACxB,IAAIC,MAAM,GAAG;MACTC,OAAO,EAAE;QACL,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,oBAAoB;MAC9D;IACJ,CAAC;IACD,IAAIC,GAAG,GAAG,0CAA0C;IACpDhB,KAAK,CAACiB,GAAG,CAACD,GAAG,EAAEJ,MAAM,CAAC,CAACM,IAAI,CAACC,QAAQ,IAAI;MACpC,IAAIA,QAAQ,CAACC,MAAM,KAAKnB,cAAc,CAACoB,EAAE,EAAE;QACvCX,WAAW,CAACS,QAAQ,CAACG,IAAI,CAAC;MAC9B;IACJ,CAAC,CAAC,CAACC,KAAK,CAACC,KAAK,IAAI;MACd,IAAIA,KAAK,CAACL,QAAQ,EAAE;QAChBjB,IAAI,CAACuB,IAAI,CAAC;UAAEC,KAAK,EAAE,SAAS;UAAEC,IAAI,EAAE,OAAO;UAAEC,IAAI,EAAG,GAAEJ,KAAK,CAACL,QAAQ,CAACG,IAAK;QAAE,CAAC,CAAC;MAClF,CAAC,MAAM;QACHpB,IAAI,CAACuB,IAAI,CAAC,sBAAsB,EAAE,wBAAwB,EAAE,OAAO,CAAC;MACxE;IACJ,CAAC,CAAC;EACN,CAAC;EACD,MAAMI,cAAc,GAAGA,CAACC,EAAE,EAACC,YAAY,KAAK;IACxC,MAAMnB,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,oBAAoB;MAC9D;IACJ,CAAC;IACD,IAAIC,GAAG,GAAI,gDAA+Cc,EAAG,EAAC;IAC9D9B,KAAK,CAACgC,MAAM,CAAChB,GAAG,EAAEJ,MAAM,CAAC,CAACM,IAAI,CAACe,GAAG,IAAI;MAClC,IAAGA,GAAG,CAACb,MAAM,KAAGnB,cAAc,CAACoB,EAAE,EAAC;QAC9BnB,IAAI,CAACuB,IAAI,CAAC;UAACC,KAAK,EAAC,UAAU;UAACE,IAAI,EAAE,4BAA2BE,EAAG,EAAC;UAACH,IAAI,EAAC;QAAS,CAAC,CAAC;MACtF;IACJ,CAAC,CAAC,CAACJ,KAAK,CAACW,GAAG,IAAI;MACZ,IAAIA,GAAG,CAACf,QAAQ,EAAE;QACdjB,IAAI,CAACuB,IAAI,CAAE,QAAO,EAAG,GAAES,GAAG,CAACf,QAAQ,CAACG,IAAK,EAAC,EAAG,OAAM,CAAC;MACxD,CAAC,MAAM;QACHpB,IAAI,CAACuB,IAAI,CAAC;UAAEC,KAAK,EAAE,4BAA4B;UAAEC,IAAI,EAAE;QAAQ,CAAC,CAAC;MACrE;IACJ,CAAC,CAAC,CAACQ,OAAO,CAAC,MAAI;MACX;MACA;MACA;MACA;MACA;MACA;MACAJ,YAAY,CAAC,MAAI;QAAC,OAAO,KAAK;MAAA,CAAC,CAAC;MAChCpB,aAAa,CAAC,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EACD,MAAMyB,cAAc,GAAIN,EAAE,IAAK;IAC3BO,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAER,EAAE,CAAC;IACzB5B,IAAI,CAACuB,IAAI,CAAC;MACNC,KAAK,EAAE,mCAAmC;MAC1Ca,KAAK,EAAE,MAAM;MACbC,eAAe,EAAE;QACfC,cAAc,EAAE;MAClB,CAAC;MACDC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,QAAQ;MAC3BC,mBAAmB,EAAE,IAAI;MACzBC,UAAU,EAAGC,IAAI,IAAK;QAClB,MAAMlC,MAAM,GAAG;UACXC,OAAO,EAAE;YACL,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,oBAAoB;UAC9D;QACJ,CAAC;QACD,IAAIC,GAAG,GAAI,2CAA0C;QACrD,IAAIM,IAAI,GAAC;UAAC,MAAM,EAAGwB,IAAI;UAAC,IAAI,EAAEhB;QAAE,CAAC;QACnC,OAAO9B,KAAK,CAAC+C,GAAG,CAAC/B,GAAG,EAACM,IAAI,EAACV,MAAM,CAAC,CAACM,IAAI,CAACe,GAAG,IAAE;UAC1C,IAAGA,GAAG,CAACb,MAAM,KAAGnB,cAAc,CAACoB,EAAE,EAAC;YAC9BnB,IAAI,CAACuB,IAAI,CAAC;cAACC,KAAK,EAAC,UAAU;cAACE,IAAI,EAAE,8BAA6BkB,IAAK,WAAUhB,EAAG,EAAC;cAACH,IAAI,EAAC;YAAS,CAAC,CAAC;UACvG;QACF,CAAC,CAAC,CAACJ,KAAK,CAACW,GAAG,IAAE;UACZ,IAAGA,GAAG,CAACf,QAAQ,EAAC;YACZjB,IAAI,CAAC8C,qBAAqB,CAAE,YAAWd,GAAG,CAACf,QAAQ,CAACG,IAAK,EAAC,CAAC;UAC/D,CAAC,MAAI;YACDpB,IAAI,CAAC8C,qBAAqB,CAAC,uBAAuB,CAAC;UACvD;QACF,CAAC,CAAC;MACJ,CAAC;MACDC,iBAAiB,EAAEA,CAAA,KAAM,CAAC/C,IAAI,CAACgD,SAAS,CAAC;IAC3C,CAAC,CAAC;EACR,CAAC;EACD;IAAA;IACI;IACA;IACA;IACA9C,OAAA,CAACL,eAAe,CAACoD,QAAQ;MAACC,KAAK,EAAE;QAAE3C,QAAQ;QAAEC,WAAW;QAAEC,aAAa;QAAEkB,cAAc;QAAEO;MAAe,CAAE;MAAAiB,QAAA,EACrG/C,KAAK,CAAC+C;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;AAEnC,CAAC;AAAAlD,EAAA,CA5FKF,aAAa;AAAAqD,EAAA,GAAbrD,aAAa;AA8FnB,eAAeA,aAAa;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}