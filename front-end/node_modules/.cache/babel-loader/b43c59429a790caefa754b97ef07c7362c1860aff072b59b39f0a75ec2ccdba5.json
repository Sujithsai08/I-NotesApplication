{"ast":null,"code":"var _jsxFileName = \"D:\\\\vs_code\\\\React_applications_learning\\\\i-notes\\\\src\\\\contexts\\\\TodoState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport todoContext from './TodoContext';\nimport axios, { HttpStatusCode } from 'axios';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoState = props => {\n  _s();\n  const initialTodos = [];\n  const [todos, setTodos] = useState(initialTodos);\n  const getTodos = () => {\n    let config = {\n      headers: {\n        'Authorization': localStorage.getItem('tokenForValidation')\n      }\n    };\n    let url = 'http://localhost:9092/user/getTodos';\n    axios.get(url, config).then(response => {\n      if (response.status === HttpStatusCode.Ok) {\n        setTodos(response.data);\n      }\n    }).catch(error => {\n      if (error.response) {\n        Swal.fire({\n          title: \"Error !\",\n          icon: 'error',\n          text: `${error.response.data}`\n        });\n      } else {\n        Swal.fire(\"Something went wrong\", \"Please try again later\", 'error');\n      }\n    });\n  };\n  const updateTodo = id => {\n    Swal.fire({\n      title: 'Enter TODO to update',\n      input: 'text',\n      inputAttributes: {\n        autocapitalize: 'off'\n      },\n      showCancelButton: true,\n      confirmButtonText: 'Update',\n      showLoaderOnConfirm: true,\n      preConfirm: description => {\n        const config = {\n          headers: {\n            'Authorization': localStorage.getItem('tokenForValidation')\n          }\n        };\n        let url = `http://localhost:9092/user/updateTodoDescription`;\n        let data = {\n          'description': description,\n          'id': id\n        };\n        return axios.put(url, data, config).then(res => {\n          if (res.status === HttpStatusCode.Ok) {\n            Swal.fire({\n              title: \"Success!\",\n              text: `TODO changed with ${description}`,\n              icon: 'success'\n            });\n            let newTodos = todos.map(todo => {\n              if (todo.id === id) {\n                todo.description = description;\n              }\n              return todo;\n            });\n            setTodos(newTodos);\n          }\n        }).catch(err => {\n          if (err.response) {\n            Swal.showValidationMessage(`Failed : ${err.response.data}`);\n          } else {\n            Swal.showValidationMessage(\"Something went wrong!\");\n          }\n        });\n      },\n      allowOutsideClick: () => !Swal.isLoading()\n    });\n  };\n  const deleteTodo = (id, setIsLoading) => {\n    const config = {\n      headers: {\n        'Authorization': localStorage.getItem('tokenForValidation')\n      }\n    };\n    let url = `http://localhost:9092/user/deleteTodo?id=${id}`;\n    axios.delete(url, config).then(res => {\n      if (res.status === HttpStatusCode.Ok) {\n        Swal.fire({\n          title: \"Success!\",\n          text: `TODO deleted`,\n          icon: 'success'\n        });\n      }\n    }).catch(err => {\n      if (err.response) {\n        Swal.fire(`Failed`, `${err.response.data}`, `error`);\n      } else {\n        Swal.fire({\n          title: \"Error occured Try again!!!\",\n          icon: 'error'\n        });\n      }\n    }).finally(() => {\n      setIsLoading(() => {\n        return false;\n      });\n      let newTodo = todos.filter(item => {\n        return item.id !== id;\n      });\n      setTodos(newTodo);\n    });\n  };\n  const todoCompleted = (id, isCompleted, setIsCompleted) => {\n    const config = {\n      headers: {\n        'Authorization': localStorage.getItem('tokenForValidation')\n      }\n    };\n    let url = `http://localhost:9092/user/updateTodoCompletion`;\n    let data = {\n      'isCompleted': `${!isCompleted}`,\n      'id': id\n    };\n    return axios.put(url, data, config).then(res => {\n      if (res.status === HttpStatusCode.Ok) {\n        Swal.fire({\n          title: \"Success!\",\n          text: `TODO completed .`,\n          icon: 'success'\n        });\n        setIsCompleted(prev => !prev);\n        let newTodos = todos.map(todo => {\n          if (todo.id === id) {\n            todo.isCompleted = `${!isCompleted}`;\n          }\n          return todo;\n        });\n        setTodos(newTodos);\n      }\n    }).catch(err => {\n      if (err.response) {\n        Swal.fire(`Failed`, `${err.response.data}`, `error`);\n      } else {\n        Swal.fire({\n          title: \"Error occured Try again!!!\",\n          icon: 'error'\n        });\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(todoContext.Provider, {\n    value: {\n      todos,\n      setTodos,\n      getTodos,\n      updateTodo,\n      deleteTodo,\n      todoCompleted\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoState, \"8yCmoPUuqM1vaUbV/+pWostrM30=\");\n_c = TodoState;\nexport default TodoState;\nvar _c;\n$RefreshReg$(_c, \"TodoState\");","map":{"version":3,"names":["React","useState","todoContext","axios","HttpStatusCode","Swal","jsxDEV","_jsxDEV","TodoState","props","_s","initialTodos","todos","setTodos","getTodos","config","headers","localStorage","getItem","url","get","then","response","status","Ok","data","catch","error","fire","title","icon","text","updateTodo","id","input","inputAttributes","autocapitalize","showCancelButton","confirmButtonText","showLoaderOnConfirm","preConfirm","description","put","res","newTodos","map","todo","err","showValidationMessage","allowOutsideClick","isLoading","deleteTodo","setIsLoading","delete","finally","newTodo","filter","item","todoCompleted","isCompleted","setIsCompleted","prev","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/vs_code/React_applications_learning/i-notes/src/contexts/TodoState.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport todoContext from './TodoContext'\r\nimport axios, { HttpStatusCode } from 'axios'\r\nimport Swal from 'sweetalert2'\r\nconst TodoState = (props) => {\r\n    const initialTodos = []\r\n    const [todos, setTodos] = useState(initialTodos)\r\n    const getTodos=()=>{\r\n        let config = {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('tokenForValidation')\r\n            }\r\n        }\r\n        let url = 'http://localhost:9092/user/getTodos'\r\n        axios.get(url, config).then(response => {\r\n            if (response.status === HttpStatusCode.Ok) {\r\n                setTodos(response.data)\r\n            }\r\n        }).catch(error => {\r\n            if (error.response) {\r\n                Swal.fire({ title: \"Error !\", icon: 'error', text: `${error.response.data}` })\r\n            } else {\r\n                Swal.fire(\"Something went wrong\", \"Please try again later\", 'error');\r\n            }\r\n        })\r\n    }\r\n    const updateTodo=(id)=>{\r\n        Swal.fire({\r\n            title: 'Enter TODO to update',\r\n            input: 'text',\r\n            inputAttributes: {\r\n                autocapitalize: 'off'\r\n            },\r\n            showCancelButton: true,\r\n            confirmButtonText: 'Update',\r\n            showLoaderOnConfirm: true,\r\n            preConfirm: (description) => {\r\n                const config = {\r\n                    headers: {\r\n                        'Authorization': localStorage.getItem('tokenForValidation')\r\n                    }\r\n                };\r\n                let url = `http://localhost:9092/user/updateTodoDescription`\r\n                let data = { 'description': description, 'id': id }\r\n                return axios.put(url, data, config).then(res => {\r\n                    if (res.status === HttpStatusCode.Ok) {\r\n                        Swal.fire({ title: \"Success!\", text: `TODO changed with ${description}`, icon: 'success' })\r\n                        let newTodos=todos.map(todo=>{\r\n                            if(todo.id===id){\r\n                                todo.description=description\r\n                            }\r\n                            return todo;\r\n                        })\r\n                        setTodos(newTodos)\r\n                    }\r\n                }).catch(err => {\r\n                    if (err.response) {\r\n                        Swal.showValidationMessage(`Failed : ${err.response.data}`)\r\n                    } else {\r\n                        Swal.showValidationMessage(\"Something went wrong!\")\r\n                    }\r\n                })\r\n            },\r\n            allowOutsideClick: () => !Swal.isLoading()\r\n        })\r\n    }\r\n    const deleteTodo=(id,setIsLoading)=>{\r\n        const config = {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('tokenForValidation')\r\n            }\r\n        };\r\n        let url = `http://localhost:9092/user/deleteTodo?id=${id}`\r\n        axios.delete(url, config).then(res => {\r\n            if (res.status === HttpStatusCode.Ok) {\r\n                Swal.fire({ title: \"Success!\", text: `TODO deleted`, icon: 'success' })\r\n            }\r\n        }).catch(err => {\r\n            if (err.response) {\r\n                Swal.fire(`Failed`, `${err.response.data}`, `error`)\r\n            } else {\r\n                Swal.fire({ title: \"Error occured Try again!!!\", icon: 'error' })\r\n            }\r\n        }).finally(() => {\r\n            setIsLoading(() => { return false })\r\n            let newTodo = todos.filter((item) => { return item.id !== id })\r\n            setTodos(newTodo)\r\n        })\r\n    }\r\n    const todoCompleted=(id,isCompleted,setIsCompleted)=>{\r\n        const config = {\r\n            headers: {\r\n                'Authorization': localStorage.getItem('tokenForValidation')\r\n            }\r\n        };\r\n        let url = `http://localhost:9092/user/updateTodoCompletion`\r\n        let data = { 'isCompleted': `${!(isCompleted)}`, 'id': id }\r\n        return axios.put(url, data, config).then(res => {\r\n            if (res.status === HttpStatusCode.Ok) {\r\n                Swal.fire({ title: \"Success!\", text: `TODO completed .`, icon: 'success' })\r\n                setIsCompleted((prev)=>!prev)\r\n                let newTodos=todos.map(todo=>{\r\n                    if(todo.id===id){\r\n                        todo.isCompleted= `${(! isCompleted)}`\r\n                    }\r\n                    return todo;\r\n                })\r\n                setTodos(newTodos)\r\n            }\r\n        }).catch(err => {\r\n            if (err.response) {\r\n                Swal.fire(`Failed`, `${err.response.data}`, `error`)\r\n            } else {\r\n                Swal.fire({ title: \"Error occured Try again!!!\", icon: 'error' })\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <todoContext.Provider value={{todos,setTodos,getTodos,updateTodo,deleteTodo,todoCompleted}}>\r\n            {props.children}\r\n        </todoContext.Provider>\r\n    )\r\n}\r\n\r\nexport default TodoState\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}